basePath: /api/v1
definitions:
  models.CreateShop:
    properties:
      address:
        type: string
      location:
        items:
          type: number
        type: array
      name:
        type: string
      rating:
        type: number
    type: object
  models.EmptyBody:
    type: object
  models.GetUserResponse:
    properties:
      bio:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      username:
        type: string
    type: object
  models.InsertShop:
    properties:
      address:
        type: string
      id:
        type: string
      location:
        items:
          type: number
        type: array
      name:
        type: string
      rating:
        type: number
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
    type: object
  models.Shop:
    properties:
      address:
        type: string
      created_date:
        type: string
      id:
        type: string
      location:
        items:
          type: number
        type: array
      modified_date:
        type: string
      name:
        type: string
      rating:
        type: number
    type: object
  models.SignUpRequest:
    properties:
      email:
        type: string
      password:
        type: string
      passwordConfirmation:
        type: string
      username:
        type: string
    type: object
  models.UpdateUserRequest:
    properties:
      bio:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
    type: object
  models.UserCoordinates:
    properties:
      latitude:
        type: number
      longitude:
        type: number
    type: object
  types.ApiError:
    properties:
      message:
        type: string
    type: object
host: go-coffee-api.vercel.app
info:
  contact:
    email: eduardozepeda@coffeebytes.dev
    name: Eduardo Zepeda
  description: This API returns information about speciality coffee shops in Guadalajara,
    Mexico.
  license:
    name: MIT
    url: https://mit-license.org/
  termsOfService: http://swagger.io/terms/
  title: Coffee Shops in Gdl API
  version: "1.0"
paths:
  /cafes:
    get:
      consumes:
      - application/json
      description: Get a list of all coffee shop in Guadalajara. Use page and size
        GET arguments to regulate the number of objects returned and the page, respectively.
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Size number
        in: query
        name: size
        type: integer
      - description: Search term
        in: query
        name: searchTerm
        type: string
      - description: User longitude
        in: query
        name: longitude
        type: number
      - description: User latitude
        in: query
        name: latitude
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Shop'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get a list of coffee shops
      tags:
      - cafes
    post:
      consumes:
      - application/json
      description: Create a coffee shop object.
      parameters:
      - description: New Coffee Shop data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateShop'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateShop'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Create a new coffee shop
      tags:
      - cafe
  /cafes/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a coffee shop object.
      parameters:
      - description: Coffee Shop ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Delete a coffee shop
      tags:
      - cafe
    get:
      consumes:
      - application/json
      description: Get a specific coffee shop object. Id parameter must be an integer.
      parameters:
      - description: Coffee Shop ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Shop'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get a new coffee shop by its id
      tags:
      - cafe
    put:
      consumes:
      - application/json
      description: Update a coffee shop object.
      parameters:
      - description: Updated Coffee Shop data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.InsertShop'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InsertShop'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Update a coffee shop
      tags:
      - cafe
  /cafes/nearest:
    post:
      consumes:
      - application/json
      description: Get a list of the user nearest coffee shops in Guadalajara, ordered
        by distance. It needs user's latitude and longitude as float numbers. Treated
        as POST to prevent third parties to save users' location into databases.
      parameters:
      - description: User coordinates (latitude, longitude) in JSON
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserCoordinates'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Shop'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            items:
              $ref: '#/definitions/models.EmptyBody'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get a list of the nearest coffee shops
      tags:
      - cafe
      - search
  /cafes/search/{searchTerm}:
    get:
      consumes:
      - application/json
      description: Search a coffee shop by a given word
      parameters:
      - description: Search term
        in: path
        name: searchTerm
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Size number
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Shop'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            items:
              $ref: '#/definitions/models.EmptyBody'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Search a coffee shop by a given word
      tags:
      - cafe
      - search
  /login:
    post:
      consumes:
      - application/json
      description: Login a user using email and password receive a JWT as a response
        from a successful login
      parameters:
      - description: 'Login data: email and password'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Login a user,
      tags:
      - user
  /user:
    post:
      consumes:
      - application/json
      description: Register a user using email, username, password and password confirmation
      parameters:
      - description: 'Login data: email, password and password confirmation'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Register a new user,
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the current user account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Delete current user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get id, username, email, first name, last name and bio from a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get an user account data,
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update the current user's bio, first name, last name and username
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: 'User data: id, bio, firstName, lastName and username'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateUserRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Update current user,
      tags:
      - user
swagger: "2.0"
