basePath: /api/v1
definitions:
  models.CoffeeBag:
    properties:
      brand:
        type: string
      origin:
        type: string
      species:
        type: string
    type: object
  models.CoffeeShop:
    properties:
      address:
        type: string
      city:
        type: string
      location:
        items:
          type: number
        type: array
      name:
        type: string
      rating:
        type: number
      roaster:
        type: boolean
    type: object
  models.EmptyBody:
    type: object
  models.Feed:
    properties:
      object:
        type: string
      user:
        type: string
      verb:
        type: string
    type: object
  models.FollowUnfollowRequest:
    properties:
      userFromId:
        type: string
      userToId:
        type: string
    type: object
  models.GetUserResponse:
    properties:
      bio:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      isStaff:
        type: string
      lastName:
        type: string
      username:
        type: string
    type: object
  models.LikeUnlikeCoffeeShopRequest:
    properties:
      shopId:
        type: string
      userId:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.LoginResponse:
    properties:
      token:
        type: string
    type: object
  models.SignUpRequest:
    properties:
      email:
        type: string
      password:
        type: string
      passwordConfirmation:
        type: string
      username:
        type: string
    type: object
  models.UpdateUserRequest:
    properties:
      bio:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
    type: object
  types.ApiError:
    properties:
      errors:
        additionalProperties:
          type: string
        type: object
      message:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: eduardozepeda@coffeebytes.dev
    name: Eduardo Zepeda
  description: This API returns information about speciality coffee shops in Guadalajara,
    Mexico.
  license:
    name: MIT
    url: https://mit-license.org/
  termsOfService: http://swagger.io/terms/
  title: Coffee Shops in Gdl API
  version: "1.0"
paths:
  /coffee-bags:
    get:
      consumes:
      - application/json
      description: Get a list of all coffee bags in Guadalajara. Use page and size
        GET arguments to regulate the number of objects returned and the page, respectively.
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Size number
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CoffeeBag'
            type: array
        "404":
          description: Not Found
          schema:
            items:
              $ref: '#/definitions/models.EmptyBody'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get a list of coffee bags
      tags:
      - coffee bags
    post:
      consumes:
      - application/json
      description: Create a coffee bag object.
      parameters:
      - description: New Coffee Bag data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CoffeeBag'
      - description: With the bearer started. Only staff members
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CoffeeBag'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Create a new coffee bag
      tags:
      - coffee bags
  /coffee-bags/{coffee_bag_id}:
    delete:
      consumes:
      - application/json
      description: Delete a coffee bag object by its Id.
      parameters:
      - description: Coffee Bag ID
        in: path
        name: coffee_bag_id
        required: true
        type: string
      - description: With the bearer started. Only staff members
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Delete a coffee bag
      tags:
      - coffee bags
    get:
      consumes:
      - application/json
      description: Get a specific coffee bag object. Id parameter must be an integer.
      parameters:
      - description: Coffee Bag ID
        in: path
        name: coffee_bag_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CoffeeBag'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get a coffee bag by its id
      tags:
      - coffee bags
    put:
      consumes:
      - application/json
      description: Update a coffee bag object by its Id.
      parameters:
      - description: Updated Coffee Bag data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CoffeeBag'
      - description: With the bearer started. Only staff members
        in: header
        name: Authorization
        required: true
        type: string
      - description: Coffee Bag ID
        in: path
        name: coffee_bag_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CoffeeBag'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Update a coffee bag
      tags:
      - coffee bags
  /coffee-shops:
    get:
      consumes:
      - application/json
      description: Get a list of all coffee shop in Guadalajara. Use page and size
        GET arguments to regulate the number of objects returned and the page, respectively.
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Size number
        in: query
        name: size
        type: integer
      - description: Search term
        in: query
        name: search
        type: string
      - description: User longitude
        in: query
        name: longitude
        type: number
      - description: User latitude
        in: query
        name: latitude
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CoffeeShop'
            type: array
        "404":
          description: Not Found
          schema:
            items:
              $ref: '#/definitions/models.EmptyBody'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get a list of coffee shops
      tags:
      - coffee shops
    post:
      consumes:
      - application/json
      description: Create a coffee shop object.
      parameters:
      - description: New Coffee Shop data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CoffeeShop'
      - description: With the bearer started. Only staff members
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CoffeeShop'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Create a new coffee shop
      tags:
      - coffee shops
  /coffee-shops/{coffee_shop_id}:
    delete:
      consumes:
      - application/json
      description: Delete a coffee shop object by its Id.
      parameters:
      - description: Coffee Shop ID
        in: path
        name: coffee_shop_id
        required: true
        type: string
      - description: With the bearer started. Only staff members
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Delete a coffee shop
      tags:
      - coffee shops
    get:
      consumes:
      - application/json
      description: Get a specific coffee shop object. Id parameter must be an integer.
      parameters:
      - description: Coffee Shop ID
        in: path
        name: coffee_shop_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CoffeeShop'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get a coffee shop by its id
      tags:
      - coffee shops
    put:
      consumes:
      - application/json
      description: Update a coffee shop object by its Id.
      parameters:
      - description: Updated Coffee Shop data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CoffeeShop'
      - description: With the bearer started. Only staff members
        in: header
        name: Authorization
        required: true
        type: string
      - description: Coffee Shop ID
        in: path
        name: coffee_shop_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CoffeeShop'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Update a coffee shop
      tags:
      - coffee shops
  /feed:
    get:
      consumes:
      - application/json
      description: This route returns the user's last ten feed items. Each item consists
        of a subject, an action and a destinatary
      parameters:
      - description: With the bearer started.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Feed'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: The active user's feed
      tags:
      - feed
  /followers/{user_id}:
    get:
      consumes:
      - application/json
      description: Return user's followers from a given user Id
      parameters:
      - description: User id
        in: path
        name: user_id
        required: true
        type: string
      - description: With the bearer started.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GetUserResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Return user's followers,
      tags:
      - follows
  /following:
    post:
      consumes:
      - application/json
      description: Follow a user account using its id
      parameters:
      - description: Follow a user account
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.FollowUnfollowRequest'
      - description: With the bearer started.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.FollowUnfollowRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Follow user,
      tags:
      - follows
  /following/{user_id}:
    delete:
      consumes:
      - application/json
      description: Unfollow a user account using its id
      parameters:
      - description: Unfollow a user account
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.FollowUnfollowRequest'
      - description: User id
        in: path
        name: user_id
        required: true
        type: string
      - description: With the bearer started.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Unfollow user,
      tags:
      - follows
    get:
      consumes:
      - application/json
      description: Return following users from a given user Id
      parameters:
      - description: User id
        in: path
        name: user_id
        required: true
        type: string
      - description: With the bearer started.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GetUserResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Return following users,
      tags:
      - follows
  /likes:
    get:
      consumes:
      - application/json
      description: Return liked coffee shops data by user id
      parameters:
      - description: User id
        in: query
        name: user
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Size number
        in: query
        name: size
        type: integer
      - description: With the bearer started.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CoffeeShop'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Return liked coffee shops by user,
      tags:
      - likes
    post:
      consumes:
      - application/json
      description: Like a coffee shop
      parameters:
      - description: Like a coffee shop
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LikeUnlikeCoffeeShopRequest'
      - description: With the bearer started.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.LikeUnlikeCoffeeShopRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Like a coffee shop
      tags:
      - likes
  /likes/{coffee_shop_id}:
    delete:
      consumes:
      - application/json
      description: Unlike a coffee shop
      parameters:
      - description: Unlike a coffee shop
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LikeUnlikeCoffeeShopRequest'
      - description: Coffee shop id
        in: path
        name: coffee_shop_id
        required: true
        type: string
      - description: With the bearer started.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Unlike a coffee shop
      tags:
      - likes
  /login:
    post:
      consumes:
      - application/json
      description: Login a user using email and password receive a JWT as a response
        from a successful login
      parameters:
      - description: 'Login data: email and password'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Login a user,
      tags:
      - users
  /signup:
    post:
      consumes:
      - application/json
      description: Register a user using email, username, password and password confirmation
      parameters:
      - description: 'Login data: email, password and password confirmation'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SignUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Register a new user,
      tags:
      - users
  /users/{user_id}:
    delete:
      consumes:
      - application/json
      description: Delete the current user account
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: With the bearer started.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Delete current user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get id, username, email, first name, last name and bio from a user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetUserResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.EmptyBody'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Get an user account data,
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update the current user's bio, first name, last name and username
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: 'User data: id, bio, firstName, lastName and username'
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      - description: With the bearer started.
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateUserRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiError'
      summary: Update current user,
      tags:
      - users
swagger: "2.0"
